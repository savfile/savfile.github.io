<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>星光之家</title>
    <link>https://savfile.github.io/</link>
    
    <atom:link href="https://savfile.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Thu, 29 Jun 2023 08:45:13 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>CVE-2023-34312 腾讯 QQ / TIM 本地提权漏洞</title>
      <link>https://savfile.github.io/posts/5024c62c.html</link>
      <guid>https://savfile.github.io/posts/5024c62c.html</guid>
      <pubDate>Thu, 29 Jun 2023 08:45:13 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;a href=&quot;https://github.com/savfile/CVE-2023-34312/blob/master/README.md&quot;&gt;English&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;受影响的软件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QQ 9.6.1 ~ 9.7.9 （9.7.1</description>
        
      
      
      
      <content:encoded><![CDATA[<p><a href="https://github.com/savfile/CVE-2023-34312/blob/master/README.md">English</a></p><p>受影响的软件：</p><ul><li>QQ 9.6.1 ~ 9.7.9 （9.7.10 已修复）</li><li>TIM 3.4.1 ~ 3.4.6</li></ul><p>受影响的组件：</p><ul><li>QQProtect.exe 4.5.0.9424</li><li>QQProtect.exe 4.5.0.9426</li><li>QQProtectEngine.dll 4.5.0.9424</li><li>QQProtectEngine.dll 4.5.0.9426</li></ul><h2 id="1-概要"><a href="#1-概要" class="headerlink" title="1. 概要"></a>1. 概要</h2><p><a href="https://im.qq.com/">腾讯QQ</a> 和 <a href="https://tim.qq.com/">TIM</a> 是由深圳市腾讯计算机系统有限公司开发的两款即时通讯软件。它们都有一个<strong>可删除</strong>的组件 <em>QQProtect.exe_，位于 <code>%ProgramFiles(x86)%\Common Files\Tencent\QQProtect\bin</code>。_QQProtect.exe</em> 被安装为一个名为 <em>QPCore</em> 的 Windows 服务，并在系统启动时自动以 <code>NT Authority\SYSTEM</code> 账户运行。组件 <em>QQProtect.exe</em> 及其依赖 DLL <em>QQProtectEngine.dll</em> 都存在一个任意地址<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="原文为：arbitrary address。">[1]</span></a></sup>写入漏洞。低权限的攻击者可以通过结合这两个漏洞在 <em>QQProtect.exe</em> 进程中加载恶意 DLL，并获得带有 <code>NT Authority\SYSTEM</code> 权限的外壳。</p><h2 id="2-漏洞"><a href="#2-漏洞" class="headerlink" title="2. 漏洞"></a>2. 漏洞</h2><p>第一个漏洞是位于 <code>QQProtect.exe+0x40c9f8</code> 的代码：</p><p><img src="/img/image0.png"></p><p>其中 <code>a2</code> 是一个可以被攻击者控制的指针，<code>dword_41a740</code> 是一个全局变量，其值为 <code>0x00000001</code>，所以攻击者可以在任何地址写入值 <code>DWORD(1)</code>。</p><p>第二个漏洞是位于 <code>QQProtectEngine.dll+0x3B4F6</code> 的代码：</p><p><img src="/img/image1.png"></p><p>其中 <code>v3</code> 是一个可以被攻击者控制的指针，所以攻击者可以在任何给定的地址 <code>ptr</code> 上写入 <code>std::bit_cast&lt;DWORD&gt;(ptr) + 4</code> 的值<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="原文为：So an attacker can write the value `std::bit_cast(ptr) + 4` at any given address `ptr`。">[2]</span></a></sup>。</p><p>由于 <code>QQProtect.exe</code> 没有 ASLR 保护，攻击者可以篡改驻留在 <code>QQProtect.exe</code> 中的函数指针，并使用 ROP 链轻松执行任意代码。</p><h2 id="3-概念证明"><a href="#3-概念证明" class="headerlink" title="3. 概念证明"></a>3. 概念证明</h2><p>poc 代码使用 Rust 语言编写，你需要用 <code>i686-pc-windows-msvc</code> 工具链来编译。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd poc<br>cargo +stable-i686-pc-windows-msvc build --release --config &quot;build.rustflags = [\&quot;-C\&quot;, \&quot;target-feature=+crt-static\&quot;]&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">编译失败使用下面这个命令</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">cargo +stable-i686-pc-windows-msvc build --release</span><br></code></pre></td></tr></table></figure><p>你会得到两个 DLL：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">target\release\tinyxml.dll<br>target\release\evil.dll<br></code></pre></td></tr></table></figure><p>或从 <a href="https://github.com/savfile/CVE-2023-34312/releases">这里</a> 下载已编译好的版本。</p><p>然后把上面的两个 Dll 和 <code>%ProgramFiles(x86)%\Common Files\Tencent\QQProtect\bin\QQProtect.exe</code> 一起放在一个文件夹里。</p><p>最后用一条命令获得带有 <code>NT Authority\SYSTEM</code> 权限的外壳：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">QQProtect.exe &lt;PATH TO evil.dll&gt;<br></code></pre></td></tr></table></figure><h2 id="4-演示"><a href="#4-演示" class="headerlink" title="4. 演示"></a>4. 演示</h2><p><img src="/img/demonstration.gif" alt="demonstration.gif"></p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>原文为：arbitrary address。<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>原文为：So an attacker can write the value <code>std::bit_cast&lt;DWORD&gt;(ptr) + 4</code> at any given address <code>ptr</code>。<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content:encoded>
      
      
      <category domain="https://savfile.github.io/categories/%E6%8A%80%E6%9C%AF/">技术</category>
      
      
      <category domain="https://savfile.github.io/tags/%E6%BC%8F%E6%B4%9E/">漏洞</category>
      
      <category domain="https://savfile.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/">漏洞复现</category>
      
      <category domain="https://savfile.github.io/tags/CVE/">CVE</category>
      
      <category domain="https://savfile.github.io/tags/QQ/">QQ</category>
      
      
      <comments>https://savfile.github.io/posts/5024c62c.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>原神怎么你了？</title>
      <link>https://savfile.github.io/posts/e278d35f.html</link>
      <guid>https://savfile.github.io/posts/e278d35f.html</guid>
      <pubDate>Thu, 19 Jan 2023 11:46:13 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;一个哔哩哔哩弹幕网的弹幕屏蔽词配置文件，用于屏蔽 &lt;del&gt;原批&lt;/del&gt; 有关原神的弹幕。&lt;/p&gt;
&lt;p&gt;由于哔哩哔哩的 &lt;del&gt;原批&lt;/del&gt; 原神玩家数量激增，在弹幕中 &lt;a href=&quot;https://zh.moegirl.org.cn/KY&quot; title=&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<p>一个哔哩哔哩弹幕网的弹幕屏蔽词配置文件，用于屏蔽 <del>原批</del> 有关原神的弹幕。</p><p>由于哔哩哔哩的 <del>原批</del> 原神玩家数量激增，在弹幕中 <a href="https://zh.moegirl.org.cn/KY" title="萌娘百科：KY">KY</a> 的人也越来越多，为此将我平时使用的屏蔽词分享出来。</p><p><em><strong>可能有严重误伤，请酌情使用</strong>。</em></p><p><strong>下载</strong>：<a href="https://github.com/savfile/genshin-how-you/blob/main/blacklist.xml">Github</a> <a href="https://raw.fastgit.org/savfile/genshin-how-you/main/blacklist.xml">FastGit</a> <a href="https://cdn.staticaly.com/gh/savfile/genshin-how-you/main/blacklist.xml">Statically</a></p>]]></content:encoded>
      
      
      <category domain="https://savfile.github.io/categories/%E5%A8%B1%E4%B9%90/">娱乐</category>
      
      
      <category domain="https://savfile.github.io/tags/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9/">哔哩哔哩</category>
      
      <category domain="https://savfile.github.io/tags/bilibili/">bilibili</category>
      
      
      <comments>https://savfile.github.io/posts/e278d35f.html#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
